<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protobuf/gtfs-realtime.proto

namespace Google\Transit\Realtime\TripDescriptor;

use UnexpectedValueException;

/**
 * The relation between this trip and the static schedule. If a trip is done
 * in accordance with temporary schedule, not reflected in GTFS, then it
 * shouldn't be marked as SCHEDULED, but likely as ADDED.
 *
 * Protobuf type <code>google.transit.realtime.TripDescriptor.ScheduleRelationship</code>
 */
class ScheduleRelationship
{
    /**
     * Trip that is running in accordance with its GTFS schedule, or is close
     * enough to the scheduled trip to be associated with it.
     *
     * Generated from protobuf enum <code>SCHEDULED = 0;</code>
     */
    const SCHEDULED = 0;
    /**
     * An extra trip that was added in addition to a running schedule, for
     * example, to replace a broken vehicle or to respond to sudden passenger
     * load.
     *
     * Generated from protobuf enum <code>ADDED = 1;</code>
     */
    const ADDED = 1;
    /**
     * A trip that is running with no schedule associated to it, for example, if
     * there is no schedule at all.
     *
     * Generated from protobuf enum <code>UNSCHEDULED = 2;</code>
     */
    const UNSCHEDULED = 2;
    /**
     * A trip that existed in the schedule but was removed.
     *
     * Generated from protobuf enum <code>CANCELED = 3;</code>
     */
    const CANCELED = 3;

    private static $valueToName = [
        self::SCHEDULED => 'SCHEDULED',
        self::ADDED => 'ADDED',
        self::UNSCHEDULED => 'UNSCHEDULED',
        self::CANCELED => 'CANCELED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ScheduleRelationship::class, \Google\Transit\Realtime\TripDescriptor_ScheduleRelationship::class);

